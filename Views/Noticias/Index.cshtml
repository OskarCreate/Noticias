@model List<Noticias.Models.Post>

<h1>Noticias</h1>

<div>
    <h2>Lista de Posts</h2>
    <ul id="posts-list">
        @foreach (var post in Model)
        {
            <li>
                <a href="#" class="post-link" data-post-id="@post.Id">@post.Title</a>
                <div class="post-details-container" style="display:none;"></div>
            </li>
        }
    </ul>
</div>

@section Scripts {
<script>
    const postsList = document.getElementById('posts-list');
    let selectedContainer = null;

    postsList.addEventListener('click', async (e) => {
        if (e.target.classList.contains('post-link')) {
            e.preventDefault();

            const link = e.target;
            const postId = link.dataset.postId;
            const container = link.nextElementSibling;

            // Ocultar el anterior si hay uno
            if (selectedContainer && selectedContainer !== container) {
                selectedContainer.style.display = 'none';
                selectedContainer.innerHTML = '';
            }

            // Si ya est√° visible, ocultar y salir
            if (container.style.display === 'block') {
                container.style.display = 'none';
                container.innerHTML = '';
                selectedContainer = null;
                return;
            }

            selectedContainer = container;

            // Obtener post
            const postResponse = await fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`);
            const post = await postResponse.json();

            // Obtener autor
            const userResponse = await fetch(`https://jsonplaceholder.typicode.com/users/${post.userId}`);
            const user = await userResponse.json();

            // Obtener comentarios
            const commentsResponse = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`);
            const comments = await commentsResponse.json();

            // Construir HTML
            container.innerHTML = `
                <div class="post-details" style="margin-top: 1em;">
                    <h3>${post.title}</h3>
                    <p>${post.body}</p>
                    <p><strong>Autor:</strong> ${user.name}</p>
                    <div>
                        <h4>Detalles del autor:</h4>
                        <p><strong>Username:</strong> ${user.username}</p>
                        <p><strong>Email:</strong> ${user.email}</p>
                        <p><strong>Tel√©fono:</strong> ${user.phone}</p>
                        <p><strong>Sitio web:</strong> ${user.website}</p>
                        <p><strong>Direcci√≥n:</strong> ${user.address.street}, ${user.address.suite}, ${user.address.city}, ${user.address.zipcode}</p>
                        <p><strong>Ubicaci√≥n:</strong> Lat: ${user.address.geo.lat}, Lng: ${user.address.geo.lng}</p>
                        <p><strong>Compa√±√≠a:</strong> ${user.company.name} ‚Äì "${user.company.catchPhrase}", ${user.company.bs}</p>
                    </div>
                    <h4>Comentarios:</h4>
                    <ul>
                        ${comments.map(c => `<li><strong>${c.name}</strong> (${c.email}): ${c.body}</li>`).join('')}
                    </ul>
                    <button onclick="sendFeedback(${postId}, 'like')">üëç Me gust√≥</button>
                    <button onclick="sendFeedback(${postId}, 'dislike')">üëé No me gust√≥</button>
                </div>
            `;
            container.style.display = 'block';
        }
    });

    async function sendFeedback(postId, sentimiento) {
        const feedback = {
            postId: parseInt(postId),
            sentimiento: sentimiento,
            fecha: new Date().toISOString()
        };

        const response = await fetch('/api/feedback', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(feedback)
        });

        if (response.ok) {
            alert(`Feedback '${sentimiento}' enviado correctamente.`);
        } else {
            const errorText = await response.text();
            alert(`Error: ${errorText}`);
        }
    }
</script>
}

