@model List<Noticias.Models.Post>

<h1 class="mb-4">üì∞ Noticias</h1>

<div>
    <h2 class="mb-3">Lista de Posts</h2>
    <ul id="posts-list" style="list-style: none; padding: 0;">
        @foreach (var post in Model)
        {
            <li class="post-card" style="margin-bottom: 1rem; border: 1px solid #ddd; border-radius: 8px; box-shadow: 0 2px 6px rgba(0,0,0,0.1); padding: 1rem; cursor: pointer; transition: background 0.2s;">
                <div class="post-link" data-post-id="@post.Id" style="font-weight: 600; font-size: 1.1rem; color: #333;">
                    üìå @post.Title
                </div>
                <div class="post-details-container" style="display:none; margin-top: 1rem;"></div>
            </li>
        }
    </ul>
</div>

@section Scripts {
<script>
    const postsList = document.getElementById('posts-list');
    let selectedContainer = null;

    postsList.addEventListener('click', async (e) => {
        const link = e.target.closest('.post-link');
        if (!link) return;

        const postId = link.dataset.postId;
        const container = link.nextElementSibling;

        if (selectedContainer && selectedContainer !== container) {
            selectedContainer.style.display = 'none';
            selectedContainer.innerHTML = '';
        }

        if (container.style.display === 'block') {
            container.style.display = 'none';
            container.innerHTML = '';
            selectedContainer = null;
            return;
        }

        selectedContainer = container;

        // Obtener post
        const postResponse = await fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`);
        const post = await postResponse.json();

        // Obtener autor
        const userResponse = await fetch(`https://jsonplaceholder.typicode.com/users/${post.userId}`);
        const user = await userResponse.json();

        // Obtener comentarios
        const commentsResponse = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`);
        const comments = await commentsResponse.json();

        container.innerHTML = `
            <div style="border-top: 1px solid #ccc; padding-top: 1rem;">
                <p>${post.body}</p>
                <p><strong>Autor:</strong> ${user.name}</p>
                <div style="margin-top: 0.5rem;">
                    <h5>üë§ Detalles del autor</h5>
                    <p><strong>Username:</strong> ${user.username}</p>
                    <p><strong>Email:</strong> ${user.email}</p>
                    <p><strong>Tel√©fono:</strong> ${user.phone}</p>
                    <p><strong>Sitio web:</strong> ${user.website}</p>
                    <p><strong>Direcci√≥n:</strong> ${user.address.street}, ${user.address.suite}, ${user.address.city}, ${user.address.zipcode}</p>
                    <p><strong>Ubicaci√≥n:</strong> Lat: ${user.address.geo.lat}, Lng: ${user.address.geo.lng}</p>
                    <p><strong>Compa√±√≠a:</strong> ${user.company.name} ‚Äì "${user.company.catchPhrase}", ${user.company.bs}</p>
                </div>
                <h5>üí¨ Comentarios</h5>
                <ul style="padding-left: 1rem;">
                    ${comments.map(c => `<li><strong>${c.name}</strong> (${c.email}): ${c.body}</li>`).join('')}
                </ul>
                <div style="margin-top: 1rem;">
                    <button onclick="sendFeedback(${postId}, 'like')" style="margin-right: 0.5rem;">üëç Me gust√≥</button>
                    <button onclick="sendFeedback(${postId}, 'dislike')">üëé No me gust√≥</button>
                </div>
            </div>
        `;
        container.style.display = 'block';
    });

    async function sendFeedback(postId, sentimiento) {
        const feedback = {
            postId: parseInt(postId),
            sentimiento: sentimiento,
            fecha: new Date().toISOString()
        };

        const response = await fetch('/api/feedback', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(feedback)
        });

        if (response.ok) {
            alert(`Feedback '${sentimiento}' enviado correctamente.`);
        } else {
            const errorText = await response.text();
            alert(`Error: ${errorText}`);
        }
    }
</script>
}


